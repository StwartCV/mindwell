(function($, window, i) {
    // Plugin jQuery ResponsiveSlides
    $.fn.responsiveSlides = function(options) {
        // Configuración predeterminada
        var settings = $.extend({
            auto: true,
            speed: 500,
            timeout: 4000,
            pager: false,
            nav: false,
            random: false,
            pause: false,
            pauseControls: true,
            prevText: "Previous",
            nextText: "Next",
            maxwidth: "",
            navContainer: "",
            manualControls: "",
            namespace: "rslides",
            before: $.noop,
            after: $.noop
        }, options);

        // Inicializar plugin para cada elemento seleccionado
        return this.each(function() {
            i++;
            var $this = $(this),
                index = 0,
                $slides = $this.children(),
                slideCount = $slides.size(),
                speed = parseFloat(settings.speed),
                timeout = parseFloat(settings.timeout),
                maxwidth = parseFloat(settings.maxwidth),
                namespace = settings.namespace,
                uniqueNamespace = namespace + i,
                navClass = namespace + "_nav " + uniqueNamespace + "_nav",
                activeClass = namespace + "_here",
                onClass = uniqueNamespace + "_on",
                slideClass = uniqueNamespace + "_s",
                $pager = $("<ul class='" + namespace + "_tabs " + uniqueNamespace + "_tabs' />"),
                floatStyles = { "float": "left", position: "relative", opacity: 1, zIndex: 2 },
                hideStyles = { "float": "none", position: "absolute", opacity: 0, zIndex: 1 },
                supportsTransitions = function() {
                    // Verificar si el navegador soporta transiciones CSS
                    var b = (document.body || document.documentElement).style,
                        s = ["Moz", "Webkit", "Khtml", "O", "ms"],
                        prop = "transition";

                    if (typeof b[prop] === "string") return true;

                    prop = prop.charAt(0).toUpperCase() + prop.substr(1);

                    for (var i = 0; i < s.length; i++) {
                        if (typeof b[s[i] + prop] === "string") return true;
                    }

                    return false;
                }(),
                transitionSlide = function(index) {
                    settings.before();

                    if (supportsTransitions) {
                        $slides.removeClass(onClass).css(hideStyles).eq(index).addClass(onClass).css(floatStyles);
                        setTimeout(function() {
                            settings.after();
                        }, speed);
                    } else {
                        $slides.stop().fadeOut(speed, function() {
                            $(this).removeClass(onClass).css(hideStyles).css("opacity", 1);
                        }).eq(index).fadeIn(speed, function() {
                            $(this).addClass(onClass).css(floatStyles);
                            settings.after();
                            index = index;
                        });
                    }
                };

            // Orden aleatorio de las diapositivas si se especifica
            if (settings.random) {
                $slides.sort(function() {
                    return Math.round(Math.random()) - 0.5;
                });
                $this.empty().append($slides);
            }

            // Asignar ID único a cada diapositiva
            $slides.each(function(i) {
                this.id = slideClass + i;
            });

            // Agregar clases y aplicar estilos
            $this.addClass(namespace + " " + uniqueNamespace);
            options && options.maxwidth && $this.css("max-width", maxwidth);
            $slides.hide().css(hideStyles).eq(0).addClass(onClass).css(floatStyles).show();

            // Aplicar transiciones CSS si son soportadas
            if (supportsTransitions) {
                $slides.show().css({
                    "-webkit-transition": "opacity " + speed + "ms ease-in-out",
                    "-moz-transition": "opacity " + speed + "ms ease-in-out",
                    "-o-transition": "opacity " + speed + "ms ease-in-out",
                    transition: "opacity " + speed + "ms ease-in-out"
                });
            }

            // Configurar paginación si es necesario
            if ($slides.size() > 1) {
                if (timeout < speed + 100) return;

                if (settings.pager && !settings.manualControls) {
                    var pagerItems = [];
                    $slides.each(function(i) {
                        i += 1;
                        pagerItems += "<li><a href='#' class='" + slideClass + i + "'>" + i + "</a></li>";
                    });
                    $pager.append(pagerItems);
                    options.navContainer ? $(settings.navContainer).append($pager) : $this.after($pager);
                }

                if (settings.manualControls) {
                    $pager = $(settings.manualControls);
                    $pager.addClass(namespace + "_tabs " + uniqueNamespace + "_tabs");
                }

                // Asignar clases a los elementos de paginación
                if (settings.pager || settings.manualControls) {
                    var $pagerLinks = $pager.find("a");
                    var updatePager = function(index) {
                        $pagerLinks.closest("li").removeClass(activeClass).eq(index).addClass(activeClass);
                    };
                }

                // Activar auto deslizamiento
                if (settings.auto) {
                    var slideTimer = function() {
                        slideInterval = setInterval(function() {
                            $slides.stop(true, true);
                            var nextIndex = index + 1 < slideCount ? index + 1 : 0;
                            if (settings.pager || settings.manualControls) updatePager(nextIndex);
                            transitionSlide(nextIndex);
                        }, timeout);
                    };
                    slideTimer();
                }

                // Función para pausar y reiniciar el auto deslizamiento
                var startStop = function() {
                    settings.auto && (clearInterval(slideInterval), slideTimer());
                };

                settings.pause && $this.hover(function() {
                    clearInterval(slideInterval);
                }, function() {
                    startStop();
                });

                // Vincular eventos de clic a los controles de paginación
                if (settings.pager || settings.manualControls) {
                    $pagerLinks.bind("click", function(e) {
                        e.preventDefault();
                        settings.pauseControls || startStop();
                        var clickedIndex = $pagerLinks.index(this);
                        if (index === clickedIndex || $("." + onClass).queue("fx").length) return;
                        updatePager(clickedIndex);
                        transitionSlide(clickedIndex);
                    }).eq(0).closest("li").addClass(activeClass);

                    settings.pauseControls && $pagerLinks.hover(function() {
                        clearInterval(slideInterval);
                    }, function() {
                        startStop();
                    });
                }

                // Configurar navegación anterior/siguiente
                if (settings.nav) {
                    var navMarkup = "<a href='#' class='" + navClass + " prev'>" + settings.prevText + "</a><a href='#' class='" + navClass + " next'>" + settings.nextText + "</a>";
                    options.navContainer ? $(settings.navContainer).append(navMarkup) : $this.after(navMarkup);
                    var $nav = $("." + uniqueNamespace + "_nav"),
                        $prev = $nav.filter(".prev");

                    $nav.bind("click", function(e) {
                        e.preventDefault();
                        var $currentSlide = $("." + onClass);
                        if ($currentSlide.queue("fx").length) return;

                        var currentIndex = $slides.index($currentSlide);
                        var prevIndex = currentIndex - 1;
                        var nextIndex = currentIndex + 1 < slideCount ? index + 1 : 0;

                        transitionSlide($(this)[0] === $prev[0] ? prevIndex : nextIndex);
                        if (settings.pager || settings.manualControls) updatePager($(this)[0] === $prev[0] ? prevIndex : nextIndex);

                        settings.pauseControls || startStop();
                    });

                    settings.pauseControls && $nav.hover(function() {
                        clearInterval(slideInterval);
                    }, function() {
                        startStop();
                    });
                }

                // Compatibilidad con IE6 y navegadores antiguos
                if (typeof document.body.style.maxWidth === "undefined" && options.maxwidth) {
                    var resizeMaxWidth = function() {
                        $this.css("width", "100%");
                        $this.width() > maxwidth && $this.css("width", maxwidth);
                    };
                    resizeMaxWidth();
                    $(window).bind("resize", function() {
                        resizeMaxWidth();
                    });
                }
            }
        });
    };
})(jQuery, this, 0);
